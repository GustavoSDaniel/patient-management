# Configurações para o ambiente Docker (execução em contêiner)
spring:
  application:
    name: patient-service

  # Configuração do banco de dados para o ambiente Docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:db}:${DB_PORT:5432}/${DB_NAME:patient_db}
    username: ${DB_USERNAME:usuario_dev}
    password: ${DB_PASSWORD:senha_dev}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  sql:
    init:
      mode: embedded

  # Configuração do cliente gRPC para o ambiente Docker
  grpc:
    client:
      billing-service:
        address: static://${BILLING_SERVICE_HOST:billing-service}:${BILLING_SERVICE_PORT:9091}
        negotiationType: PLAINTEXT

  # Configuração do Kafka para o ambiente Docker
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9099}
    properties:
      security:
        protocol: PLAINTEXT
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

server:
  port: 8080
